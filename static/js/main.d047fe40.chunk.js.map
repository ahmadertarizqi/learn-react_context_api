{"version":3,"sources":["components/Layouts/Header.js","components/Pages/About.js","components/Pages/NotFound.js","Context.js","components/Contacts/Contact.js","components/Contacts/ContactContainer.js","components/Layouts/TextInputGroup.js","components/Contacts/addContact.js","components/Contacts/editContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","headtitle","About","match","params","id","NotFound","Context","React","createContext","Reducer","state","action","type","Object","objectSpread","allContacts","filter","contact","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","Axios","get","then","response","data","catch","error","console","log","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","alert","onShowClick","_this$props","name","email","phone","style","float","onClick","color","bind","Fragment","index","Contacts_Contact","TextInputGroup","_ref","label","onChange","AddContact","errors","onSubmitHandler","ev","preventDefault","_this$state","newContact","post","history","push","onChangeHandler","defineProperty","target","_this$state2","onSubmit","Layouts_TextInputGroup","EditContact","updateContact","put","_this3","App","Context_Provider","Layouts_Header","react_router","exact","path","component","Contacts","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d047fe40.chunk.js","sourcesContent":["import React from 'react';\r\nimport PT from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  return (  \r\n    <nav className=\"navbar navbar-expand-sm navbar-dark mb-3 bg-dark\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {/* {props.headtitle} */}\r\n          Simple React Context API\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  headtitle: 'Learn React'\r\n}\r\nHeader.propTypes = {\r\n  headtitle: PT.string.isRequired\r\n}\r\n\r\n// inline css\r\n// const headstyle = {\r\n//   color: 'blue',\r\n//   marginBottom: 0\r\n// }\r\n \r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst About = (props) => {\r\n  return (  \r\n    <div>\r\n      <h3>This Match Params Route [ {props.match.params.id} ]</h3>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default About;","import React from 'react';\r\n\r\nconst NotFound = (props) => {\r\n  return (  \r\n    <div>\r\n      <h3>This project is only for learning React Context API</h3>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst Reducer = (state, action) => {\r\n   switch(action.type) {\r\n      case 'DELETE_CONTACT':\r\n         return {\r\n            ...state,\r\n            allContacts: state.allContacts.filter((contact) => contact.id !== action.payload)\r\n         }\r\n      case 'ADD_CONTACT':\r\n         return {\r\n            ...state,\r\n            allContacts: [action.payload, ...state.allContacts]\r\n         }\r\n      case 'UPDATE_CONTACT':\r\n         return {\r\n            ...state,\r\n            allContacts: state.allContacts.map((contact) => {\r\n               if (contact.id === action.payload.id) {\r\n                  return contact = action.payload\r\n               } else {\r\n                  return contact\r\n               }\r\n            })\r\n         }   \r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n\r\nexport class Provider extends Component {\r\n   state = {\r\n      allContacts: [],\r\n      \r\n      // menjalankan atau mengirimkan action\r\n      dispatch: action => {\r\n         this.setState(state => Reducer(state, action))\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      Axios.get('https://jsonplaceholder.typicode.com/users')\r\n         .then((response) => {\r\n            // console.log(response.data)\r\n            this.setState({ allContacts: response.data })\r\n         })\r\n         .catch((error) => {\r\n            console.log(error)\r\n         })\r\n   }\r\n\r\n   render() { \r\n      return (  \r\n         <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n         </Context.Provider>\r\n      );\r\n   }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React from 'react';\r\nimport PT from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { Consumer } from '../../Context';\r\n\r\nimport './contact.css';\r\n\r\nclass Contact extends React.Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then((response) => {\r\n        alert('berhasil di hapus')\r\n        dispatch({ type: 'DELETE_CONTACT', payload:id });\r\n        console.log(response + 'Delete Working');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n  \r\n  onShowClick = () => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    })\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n\r\n    const {id, name, email, phone} = this.props\r\n    const { showContactInfo } = this.state\r\n\r\n    return (  \r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value\r\n          // console.log(dispatch)\r\n\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h5 className=\"c-name\"> {name}  \r\n                <div style={{float: 'right'}}>\r\n                  <span className=\"csr-pointer\" onClick={this.onShowClick}>\r\n                    <i className=\"icon ion-md-arrow-dropdown\"></i>\r\n                  </span>\r\n                  <Link to={`/contact/edit/${id}`} className=\"a_csr-pointer\">\r\n                    <span className=\"csr-pointer\" style={{color: 'black'}}>\r\n                      <i className=\"icon ion-md-create\"></i>\r\n                    </span>\r\n                  </Link>\r\n                  <span className=\"csr-pointer\" \r\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  >\r\n                    <i className=\"icon ion-md-trash\"></i>\r\n                  </span>\r\n                </div>\r\n              </h5>\r\n\r\n              { showContactInfo ? (\r\n                <ul className=\"list-group\"> \r\n                  <li className=\"list-group-item\">Email: {email} </li>\r\n                  <li className=\"list-group-item\">Telfon: {phone} </li>\r\n                </ul>\r\n                ) : null\r\n              }\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PT.string.isRequired,\r\n  email: PT.string.isRequired,\r\n  phone: PT.string.isRequired\r\n};\r\n \r\nexport default Contact;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../Context';\r\n\r\nclass allContacts extends React.Component {\r\n\r\n  // deleteContact = (id) => {\r\n  //   // console.log(id);\r\n  //   // console.log(this.state)\r\n  //   const { allContacts } = this.state;\r\n  //   const contactBaru = allContacts.filter(contact => contact.id !== id )\r\n  //   this.setState({\r\n  //     allContacts: contactBaru\r\n  //   })\r\n  // }\r\n\r\n  // state pertama kali di inisialisasikan\r\n\r\n  render() {\r\n    return (  \r\n      <Consumer>\r\n        {value => {\r\n\r\n          const { allContacts } = value\r\n          return (\r\n            <React.Fragment>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Link to=\"/contact/add\" className=\"btn btn-primary\">\r\n                  <i className=\"icon ion-md-add\"></i> Add Data\r\n                </Link>\r\n              </div>\r\n              <hr/>\r\n              {allContacts.map((contact, index) => (\r\n                <Contact \r\n                  key={index} id={contact.id} \r\n                  name={contact.name} \r\n                  email={contact.email} \r\n                  phone={contact.phone}\r\n                  // deleteClickHandler={this.deleteContact.bind(this, contact.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n \r\nexport default allContacts;","import React from 'react';\r\nimport PT from 'prop-types';\r\n\r\nconst TextInputGroup = ({label, type, name, value, onChange, error}) => {\r\n  return (  \r\n    <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      <input type={type} name={name} \r\n        className={error ? \"is-invalid form-control\" : \"form-control\"} \r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && \r\n        <div className=\"invalid-feedback\"> {error} </div>\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PT.string.isRequired,\r\n  type: PT.string.isRequired,\r\n  name: PT.string.isRequired,\r\n  value: PT.string.isRequired,\r\n  onChange: PT.func.isRequired,\r\n  error: PT.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n \r\nexport default TextInputGroup;","import React from 'react';\r\nimport Axios from 'axios';\r\n// import uuid from 'uuid';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../Layouts/TextInputGroup';\r\n\r\nclass AddContact extends React.Component {\r\n  \r\n  state = {  \r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  onSubmitHandler = (dispatch, ev ) => {\r\n    ev.preventDefault();\r\n    // console.log(this.state);\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check validasi form\r\n    if(name === '' || email === '' || phone === '') {\r\n      this.setState({\r\n        errors: { \r\n          name: 'Name is required!!',\r\n          email: 'Email is required!!',\r\n          phone: 'Phone is required!!',\r\n        }\r\n      })\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    Axios.post(`https://jsonplaceholder.typicode.com/users`, newContact )\r\n      .then((response) => {\r\n        dispatch({ type:'ADD_CONTACT', payload: response.data })\r\n        console.log(response.data)\r\n      })\r\n\r\n    // reset state form setelah di submit\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: ''\r\n    })\r\n\r\n    this.props.history.push('/');\r\n    alert('berhasil ditambahkan');\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    this.setState({ [ev.target.name] : ev.target.value })\r\n  }\r\n\r\n  render() { \r\n    const { name, email, phone, errors } = this.state\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          \r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmitHandler.bind(this, dispatch)} >\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChangeHandler}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChangeHandler}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    type=\"phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChangeHandler}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-primary btn-block\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n \r\nexport default AddContact;","import React from 'react';\r\n// import uuid from 'uuid';\r\nimport { Consumer } from '../../Context';\r\nimport TextInputGroup from '../Layouts/TextInputGroup';\r\nimport Axios from 'axios';\r\n\r\nclass EditContact extends React.Component {\r\n  \r\n  state = {  \r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    Axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then((response) => {\r\n        // console.log(response.data)\r\n        const contact = response.data;\r\n        this.setState({\r\n          name: contact.name,\r\n          email: contact.email,\r\n          phone: contact.phone\r\n        })\r\n      })\r\n  }\r\n\r\n  onSubmitHandler = (dispatch, ev ) => {\r\n    ev.preventDefault();\r\n    // console.log(this.state);\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check validasi form\r\n    if(name === '' || email === '' || phone === '') {\r\n      this.setState({\r\n        errors: { \r\n          name: 'Name is required!!',\r\n          email: 'Email is required!!',\r\n          phone: 'Phone is required!!',\r\n        }\r\n      })\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n    const { id } = this.props.match.params;\r\n    Axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\r\n      .then((response) => {\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: response.data });\r\n        console.log(response.data);\r\n      })\r\n\r\n    // reset state form setelah di submit\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: ''\r\n    })\r\n\r\n    this.props.history.push('/');\r\n    alert('berhasil di Edit');\r\n  }\r\n\r\n  onChangeHandler = (ev) => {\r\n    this.setState({ [ev.target.name] : ev.target.value })\r\n  }\r\n\r\n  render() { \r\n    const { name, email, phone, errors } = this.state\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          \r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmitHandler.bind(this, dispatch)} >\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChangeHandler}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChangeHandler}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    type=\"phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChangeHandler}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-primary btn-block\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n \r\nexport default EditContact;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './components/Layouts/Header';\nimport About from './components/Pages/About';\nimport NotFound from './components/Pages/NotFound';\nimport Contacts from './components/Contacts/ContactContainer';\n\nimport AddContact from './components/Contacts/addContact';\nimport EditContact from './components/Contacts/editContact';\n\nimport { Provider } from './Context'\n\n// library\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header headtitle=\"Contact Manager\"/>\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route path=\"/contact/add\" component={AddContact} />\n              <Route path=\"/contact/edit/:id\" component={EditContact} />\n              <Route path=\"/about/:id\" component={About} />\n              <Route path=\"/about\" component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}